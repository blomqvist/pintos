Copying tests/userprog/close-bad-fd into /tmp/dNY1mbOdyg.dsk...
Writing command line to /tmp/3JXhzIqJVK.dsk...
qemu -hda /tmp/3JXhzIqJVK.dsk -hdb /tmp/oJ7qjEvwhX.dsk -hdc /tmp/dNY1mbOdyg.dsk -p 1234 -m 4 -net none -monitor null -nographic
Kernel command line: -q -f put close-bad-fd run close-bad-fd
Pintos booting with 4,096 kB RAM...
375 pages available in kernel pool.
374 pages available in user pool.
Calibrating timer...  11,456,000 loops/s.
hd0:0: detected 129 sector (64 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 4,032 sector (1 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 89 sector (44 kB) disk, model "QEMU HARDDISK", serial "QM00003"
Formatting file system...done.
Boot complete.
Putting 'close-bad-fd' into the file system...
Executing 'close-bad-fd':
(close-bad-fd) begin
Page fault at 0x4051d8f8: not present error reading page in kernel context.
Interrupt 0x0e (#PF Page-Fault Exception) at eip=0xc0109b85
 cr2=4051d8f8 error=00000000
 eax=20101234 ebx=20101234 ecx=0804b5ad edx=c0119028
 esi=c0119fb0 edi=00000001 esp=c0119f54 ebp=c0119f34
 cs=0008 ds=0010 es=0010 ss=9f40
Kernel PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
backtrace  0xc01065e8 0xc010963a 0xc01096e5 0xc0101579 0xc01016df 0xc0109b85 0xc0109f40 0xc01097f2 0xc0101579 0xc01016df 0x8049b81 0x8048084 0x80480b9 0x8048595.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Simply copy-paste the backtrace command line above.
They will not get the chance to complete.
Timer: 63 ticks
Thread: 0 idle ticks, 57 kernel ticks, 6 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 55 reads, 186 writes
hd1:0: 89 reads, 0 writes
Console: 1947 characters output
Keyboard: 0 keys pressed
Exception: 1 page faults
Powering off...
